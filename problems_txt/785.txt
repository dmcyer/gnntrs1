(FUN
  abs : (var -> term) -> term
  let : var -> term -> (var -> term) -> term
  sub : (var -> term) -> term -> term
  var : var -> term
)
(VAR
  x : var
  y : var
  z : var
  u : var
  M : term -> term -> term
  N : term
  L : term -> term
  K : term -> term
  J : term
  Y : var
)
(RULES
  sub (\x.(var x)) N -> N,
  sub (\x.(var Y)) N -> var Y,
  sub (\x.abs (\z.M (var z) (var x))) N -> abs (\z.sub (\x.M (var z) (var x)) N),
  sub (\x.let (Y, L (var x), \z.M (var z) (var x))) N ->
    let (Y, sub (\x. L (var x)) N, \z.sub (\x.M (var z) (var x)) N),
  sub (\x.let (x, L (var x), \z.M (var z) (var x))) (var Y) ->
    let (Y, sub (\x. L (var x)) (var Y), \z.sub (\x.M (var z) (var x)) (var Y)),
  sub (\x.let (x, L (var x), \z.M (var z) (var x))) (let (Y, J, \u.K (var u))) ->
    let (Y, J, \u.sub (\x.let (x, L (var x), \z.M (var z) (var x)), K (var u))),
  sub (\x.let (x, L (var x), \z.M (var z) (var x))) (abs (\y.K (var y))) ->
    sub (\z.sub (\x.M (var z) (var x)) (abs (\y.K (var y))),
      sub (\y.K (var y), sub (\x. L (var x)) (abs (\y.K (var y)))))
)
(COMMENT
[149] Definition 7.4.7 without types
submitted by: Kentaro Kikuchi
)
